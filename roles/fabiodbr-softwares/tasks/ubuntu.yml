---
- name: 'Proprietary GPU Drivers'
  when: '"drivers" is defined and "drivers" in install'
  ignore_errors: yes
  block:
    - name: 'gpu drivers: PPA'
      apt_repository:
        repo: 'ppa:graphics-drivers/ppa'
        validate_certs: no
    - name: 'gpu drivers: upgrade'
      apt:
        upgrade: 'yes'
        update_cache: yes
        cache_valid_time: 3600

- name: Packages
  when: '"packages" is defined and "packages" in install'
  block:
    - name: Basic Packages
      apt:
        cache_valid_time: 3600
        dpkg_options: 'force-confold,force-confdef'
        autoremove: yes
        name: "{{ item }}"
        state: latest
      loop:
        - p7zip-full
        - vim
        - git
        - lm-sensors
        - curl
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - ubuntu-make
        - tilix
        - deluge
        - htop
        - asciinema
        - httpie
        - expect
        - ubuntu-restricted-extras
        - gettext
        - r-base
        - vlc
        - ansible-lint
        - direnv
        - ondir
        - neofetch

    - name: Gnome stuff
      apt:
        name: "{{ item }}"
        state: latest
        dpkg_options: 'force-confdef,force-confold'
        cache_valid_time: 3600
      loop:
        - gnome-tweak-tool
        - gnome-shell-extensions
        - gnome-themes-standard
        - gnome-shell-extensions
        - gnome-shell-extension-weather

- name: Python 3
  tags: programming, python
  when: '"python3" is defined and "python3" in install'
  block:
    - name: Install Python 3
      apt:
        dpkg_options: 'force-confold,force-confdef'
        autoremove: yes
        cache_valid_time: 3600
        name: "{{ item }}"
        state: latest
      loop:
        - python3
        - python3-pip
    - name: Python3 packages
      pip:
        name: "{{ item }}"
      loop:
        - http-prompt

- name: Gimp
  when: '"gimp" in install'
  block:
    - name: 'gimp: install ppa'
      apt_repository:
        repo: 'ppa:otto-kesselgulasch/gimp'
        validate_certs: no
    - name: 'gimp: apt install'
      apt:
        name: gimp
        state: latest
        cache_valid_time: 3600

- name: Google Chrome
  tags: chrome
  when: '"chrome" is defined and "chrome" in install'
  block:
    - name: "chrome apt-keys"
      apt_key:
        url: "https://dl-ssl.google.com/linux/linux_signing_key.pub"
        state: present
    - name: "chrome repository"
      apt_repository:
        repo: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
    - name: "install google chrome"
      apt:
        name: google-chrome-stable
        state: latest
    - name: 'chrome: gnome integrations'
      apt:
        name: chrome-gnome-shell
        state: latest

- name: Docker Community Edition
  when: '"docker" is defined and "docker" in install'
  block:
    - name: "docker-ce: remove snap if present"
      snap:
        name: docker
        state: absent
    - name: "docker-ce: essential packages"
      apt:
        name: "{{ item }}"
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: "docker-ce: apt-keys"
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present
    - name: "docker-ce: add repository"
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu disco stable"
        state: present
    - name: "docker-ce: install"
      apt:
        name: docker-ce
        state: present
    - name: "docker-ce: docker group"
      group:
        name: docker
        state: present
    - name: "docker-ce: add {{ user }} to docker group"
      user:
        name: "{{ user }}"
        groups: "docker"
        append: yes

- name: R
  tags: programming, R
  when: '"R" is defined and "R" in install'
  block:
    - name: 'R: keyserver'
      apt_key:
        keyserver: "keyserver.ubuntu.com"
        id: "E298A3A825C0D65DFD57CBB651716619E084DAB9"
        state: present
    - name: 'R: apt-repository'
      apt_repository:
        repo: "deb https://cloud.r-project.org/bin/linux/ubuntu eoan-cran35/"
        validate_certs: no
    - name: "R: packages"
      apt:
        name: "{{ item }}"
        state: latest
        cache_valid_time: 3600
      loop:
        - libssl-dev
        - libcurl4-openssl-dev
        - r-base

- name: R Studio {{ rstudio_version }}
  when: '"R" is defined and "R" in install'
  tags: programming, R, ide, rstudio
  block:
    - name: 'R Studio: packages facts'
      package_facts:
        manager: auto
    - debug:
        var: "ansible_facts.packages['rstudio'][0].version"
        verbosity: 4
    - name: "R Studio: install"
      apt:
        deb: "https://download1.rstudio.org/desktop/bionic/amd64/rstudio-{{ rstudio_version }}-amd64.deb"
        state: present
      when: "ansible_facts.packages['rstudio'][0].version != rstudio_version"


- name: Anaconda
  tags: programming, anaconda
  when: '"anaconda" is defined and "anaconda" in install'
  block:
    - name: "Anaconda: verify if already installed"
      stat:
        path: /opt/anaconda3/bin
      register: anaconda
    - name: "Install Anaconda"
      when: not anaconda.stat.exists
      block:
      - name: "Anaconda: prerequisites"
        apt:
          name: "{{ item }}"
          update_cache: yes
          cache_valid_time: 3600
        loop:
          - libgl1-mesa-glx
          - libegl1-mesa
          - libxrandr2
          - libxss1
          - libxcursor1
          - libxcomposite1
          - libasound2
          - libxi6
          - libxtst6
      - name: "Anaconda: Verify if already downloaded"
        stat:
          path: "/tmp/Anaconda3-2019.10-Linux-x86_64.sh"
          checksum_algorithm: md5
        register: anaconda_downloaded
      - name: "Anaconda: Download"
        when: "not anaconda_downloaded.stat.exists or anaconda_downloaded.stat.md5 != anaconda_md5"
        get_url:
          url: "{{ anaconda_url }}"
          dest: "/tmp/{{ anaconda_md5 }}.sh"
          checksum: "md5:{{ anaconda_md5 }}"
          mode: 0550
      - name: "Anaconda: Install"
        command: "bash /tmp/{{ anaconda_md5 }}.sh -b -p /opt/anaconda3"
      - name: "Anaconda: add /opt/anaconda3/bin to PATH"
        lineinfile:
          path: /etc/profile
          state: present
          line: "PATH=$PATH:/opt/anaconda3/bin"
      - name: "Anaconda: changing /opt/anaconda3 ownership to {{ user }}"
        file:
          path: /opt/anaconda3
          state: directory
          owner: "{{ user }}"
          group: "{{ user }}"
          mode: 0755
          recurse: yes

- name: Terminator
  block:
    - name: "Terminator: ppa repository"
      apt_repository:
        repo: "ppa:gnome-terminator/nightly-gtk3"
        validate_certs: no
        codename: trusty
    - name: "Terminator: install"
      apt:
        name: terminator
        state: latest
        cache_valid_time: 3600
  when: '"terminal" is defined and "terminal" in install'

- name: VirtualBox
  tags: virtualbox
  when: '"virtualbox" is defined and "virtualbox" in install'
  block:
    - name: "virtualbox: apt-keys"
      apt_key:
        url: "{{ item }}"
        state: present
      loop:
        - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
        - "https://www.virtualbox.org/download/oracle_vbox.asc"
    - name: "virtualbox: repository"
      apt_repository:
        repo: "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian eoan contrib"
    - name: 'virtualbox: upgrade'
      apt:
        upgrade: 'yes'
        update_cache: yes
    - name: "virtualbox: install"
      apt:
        name: virtualbox
        state: latest

- name: VSCode
  when: '"vscode" is defined and "vscode" in install'
  tags: programming, vscode, ide
  block:
    - name: "VSCode: Install"
      tags: dev, vscode, visual-studio-code
      become: yes
      become_user: "{{ user }}"
      shell: "yes | umake ide visual-studio-code --accept-license {{ vscode_installation  }}"
    - name: "VSCode: symlink for 'code'"
      file:
        src: "{{ vscode_bin }}"
        dest: "{{ vscode_symlink }}"
        state: link
