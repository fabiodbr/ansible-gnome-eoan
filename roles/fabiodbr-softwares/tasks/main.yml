---
- name: "Installing apt-keys"
  apt_key: 
    url: "{{ item }}" 
    state: present
  with_items:
    - "https://dl-ssl.google.com/linux/linux_signing_key.pub"

- name: "Installing Snaps"
  snap:
    name: "{{ item }}"
    state: present
    channel: latest/edge
  loop:
    - docker

- name: "Adding Google Chrome stable repository"
  lineinfile:
     path: /etc/apt/sources.list.d/google-chrome.list
     line: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
     create: yes

- name: Add PPAs
  apt_repository:
    repo: '{{ item }}'
    validate_certs: no
  with_items:
    - ppa:noobslab/icons
    - ppa:otto-kesselgulasch/gimp
    - ppa:graphics-drivers/ppa
    - ppa:daniruiz/flat-remix
  ignore_errors: yes

- name: R
  block:
    - apt_key:
        keyserver: "keyserver.ubuntu.com"
        id: "E298A3A825C0D65DFD57CBB651716619E084DAB9"
        state: present
      tags: R
    - apt_repository:
        repo: "deb https://cloud.r-project.org/bin/linux/ubuntu eoan-cran35/"
        validate_certs: no
      tags: R

- name: Trusty PPAs
  apt_repository:
    repo: "{{ item }}"
    validate_certs: no
    codename: trusty
  loop:
    - ppa:gnome-terminator/nightly-gtk3
    - ppa:noobslab/themes 

- name: Upgrade packages
  apt:
    upgrade: yes
    dpkg_options: 'force-confold,force-confdef'
    autoremove: yes
    update_cache: yes
  ignore_errors: yes

- name: Remove unity look
  apt:
    state: absent
    name: gnome-shell-extension-ubuntu-dock

- name: Install Packages
  apt:
    name: "{{ item }}"
    state: latest
    dpkg_options: 'force-confdef,force-confold'
  loop: 
    - flat-remix
    - flat-remix-gnome
    - flat-remix-gtk
    - fonts-powerline
    - fonts-fantasque-sans
    - python3-pip
    - vim
    - git
    - gnome-tweak-tool
    - gnome-shell-extensions
    - gnome-themes-standard
    - google-chrome-stable
    - chrome-gnome-shell
    - gnome-shell-extensions
    - lm-sensors
    - gnome-shell-extension-weather
    - terminator
    - curl
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - ubuntu-make
    - gimp
    - network-manager-openvpn-gnome
    - deluge
    - htop
    - asciinema
    - httpie
    - expect
    - ubuntu-restricted-extras
    - gettext
    - r-base
    - vlc

  ignore_errors: yes

- name: Install powerline-shell
  pip:
    name: powerline-shell
    state: latest

- name: Install http-prompt
  pip:
    name: http-prompt
    state: latest

- name: Configure docker for non-root user
  block:
    - group:
        name: docker
        state: present

    - name: "Add {{ user }} to docker group"
      user:
        name: "{{ user }}"
        groups: "docker"
        append: yes

- name: Habilita powerline-shell
  blockinfile:
    path: /etc/bash.bashrc
    insertafter: EOF
    content: |
      function _update_ps1() {
        PS1=$(powerline-shell $?)
      }
      if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
         PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
      fi

- name: Instala VSCode
  block:
    - name: "Instala VsCode"
      tags: dev, vscode, visual-studio-code
      become_user: "{{ user }}"
      shell: "yes | umake ide visual-studio-code --accept-license {{ vscode_installation  }}"
    - name: "Cria atalho 'code'"
      file:
        src: "{{ vscode_bin }}" 
        dest: "{{ vscode_symlink }}"
        state: link

- name: Instala fonte Menlo monospace para o VScode
  block:
    - name: Clona repositorio
      git:
        repo: https://github.com/abertsch/Menlo-for-Powerline.git
        dest: /tmp/menlo
    - name: Copia fonte
      copy:
        src: "/tmp/menlo/Menlo for Powerline.ttf"
        dest: /usr/share/fonts
    - name: Atualiza cache de fontes
      shell:
        cmd: fc-cache -f -v
  ignore_errors: yes 
